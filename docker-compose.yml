services:

  consumer: &app
    build: .
    depends_on:
      rmq:
        condition: service_started
      db:
        condition: service_healthy
        restart: true
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rmq/
      - DATABASE_URL=postgresql+asyncpg://crawler:crawler@db/crawler?async_fallback=True
    entrypoint: |
      faststream run app.consumer:app

  crawler:
    <<: *app
    entrypoint: |
      faststream run app.crawler:c.app

  rmq:
    image: rabbitmq:management-alpine
    ports:
      - 5672:5672
      - 15672:15672

  db:
    image: postgres:14
    ports:
      - "5433:5432"
    restart: always
    environment:
      - POSTGRES_USER=crawler
      - POSTGRES_PASSWORD=crawler
      - POSTGRES_DB=crawler
    volumes:
      - database_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

volumes:
  database_data:
    driver: local
